/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import clases.clsFirma;
import clases.clsUsuario;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author diego
 */
public class jpnlFirmar extends javax.swing.JPanel {

    /**
     * Creates new form jpnlFirmar
     */
    byte[] archivo;
    clsUsuario user;
    String fir;

    public jpnlFirmar() {
        initComponents();
        jlblEstado.setText("");
        jbtnDescargar.setVisible(false);
    }

    public void setUser(clsUsuario User) {
        this.user = User;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbtnFirmar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jlblArchivo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtAInformacion = new javax.swing.JTextArea();
        jlblEstado = new javax.swing.JLabel();
        jbtnDescargar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(450, 300));

        jLabel1.setText("Firma de documentos");

        jbtnFirmar.setText("Firmar");
        jbtnFirmar.setEnabled(false);
        jbtnFirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFirmarActionPerformed(evt);
            }
        });

        jButton1.setText("Subir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jlblArchivo.setText("Seleccione su archivo");

        jtxtAInformacion.setColumns(20);
        jtxtAInformacion.setRows(5);
        jScrollPane1.setViewportView(jtxtAInformacion);

        jScrollPane2.setViewportView(jScrollPane1);

        jlblEstado.setText("jLabel2");

        jbtnDescargar.setText("Descargar Firma");
        jbtnDescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDescargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlblArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1)))
                                .addGap(18, 18, 18)
                                .addComponent(jbtnFirmar))
                            .addComponent(jlblEstado)
                            .addComponent(jbtnDescargar))
                        .addGap(0, 131, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnFirmar)
                    .addComponent(jButton1)
                    .addComponent(jlblArchivo))
                .addGap(18, 18, 18)
                .addComponent(jlblEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnDescargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnFirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFirmarActionPerformed
        double inicio = System.currentTimeMillis();

        String token = null;
        File seed = new File("./seed.key");
        if (seed.exists()) {
            try {
                FileReader archivos = new FileReader(seed);
                BufferedReader lee = new BufferedReader(archivos);
                String aux;
                while ((aux = lee.readLine()) != null) {
                    token += aux + "\n";
                }
                lee.close();

                if (token != null && archivo != null) {

                    clsFirma firmar = new clsFirma();

                    //asignar ultima semilla
                    firmar.setUltSeedHex(token.split("\n")[0], token.split("\n")[0]);

                    //Asignar H
//                    clsUsuario user = (clsUsuario) request.getSession().getAttribute("usuario");
                    user.conexion();
                    String[] ultHAux = user.getUltH().split(",");
                    int ultH[] = new int[ultHAux.length];
                    for (int i = 0; i < ultHAux.length; i++) {
                        ultH[i] = Integer.parseInt(ultHAux[1]);
                    }
                    firmar.setUltH(ultH);

                    //firmar
                    String inf = firmar.Firmar(archivo);

                    String firma = firmar.getFirmaHex();
                    String link = firmar.getLinkHex();
                    String llaveP = firmar.getLlaveHex();
                    String h = "";

                    for (int uh : firmar.getH()) {
                        h += String.valueOf(uh) + ",";
                    }
                    h = h.substring(0, h.length() - 1);

                    if (user.firmar(link, firma, llaveP, h).equals("0")) {
                        jtxtAInformacion.setText("Error");
                    } else {
                        //Mostrar informaciÃ³n en pantalla
                        jtxtAInformacion.setText(inf);

                        //Actualizar semilla
                        String[] aux1 = firmar.getUltSeedHex();
                        String semilla = aux1[0] + "\n" + aux1[1];

                        BufferedWriter bw;
                        bw = new BufferedWriter(new FileWriter(seed));
                        bw.write(semilla);
                        bw.close();

                        //Descargar firma
                        fir = firma;

                        jlblEstado.setText("Firma relizada");
                        jbtnFirmar.setEnabled(false);
                        jButton1.setEnabled(false);
                        jbtnDescargar.setVisible(true);
                    }
                    System.out.println("DoneF");
                } else {
                    jtxtAInformacion.setText("Error con los archivos");
                }

                System.out.println("Tiempo firma: " + (System.currentTimeMillis() - inicio));
            } catch (IOException | NumberFormatException | SQLException ex) {
                System.out.println(ex.getMessage());
            }
        } else {
            jtxtAInformacion.setText("No se encontro semilla");
        }

    }//GEN-LAST:event_jbtnFirmarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            JFileChooser file = new JFileChooser();
            file.showOpenDialog(this);

            File sel = file.getSelectedFile();
            archivo = Files.readAllBytes(sel.toPath());

            jlblArchivo.setText(sel.getName());
            jbtnFirmar.setEnabled(true);

        } catch (HeadlessException ex) {
            System.out.println(ex.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(jpnlFirmar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbtnDescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDescargarActionPerformed
        JFileChooser s = new JFileChooser();
        int returnVal = s.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File ruta_destino;
            ruta_destino = s.getSelectedFile().getAbsoluteFile();

            try {

                BufferedWriter out;

                if (ruta_destino.getName().endsWith(".key")) {
                    out = new BufferedWriter(new FileWriter(ruta_destino));
                } else {
                    out = new BufferedWriter(new FileWriter(ruta_destino + ".key"));
                }
                out.write(fir);
                out.close();

            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }

    }//GEN-LAST:event_jbtnDescargarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnDescargar;
    private javax.swing.JButton jbtnFirmar;
    private javax.swing.JLabel jlblArchivo;
    private javax.swing.JLabel jlblEstado;
    private javax.swing.JTextArea jtxtAInformacion;
    // End of variables declaration//GEN-END:variables
}
